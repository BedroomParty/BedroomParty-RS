{
  "openapi": "3.0.0",
  "info": {
    "title": "Bedroom Party API",
    "description": "API for the Bedroom Party leaderboards",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.thebedroom.party/",
      "description": "Bedroom Party"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Server"
        ],
        "description": "Gets server status",
        "operationId": "GetStatus",
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/txt": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/staff": {
      "get": {
        "tags": [
          "Server"
        ],
        "description": "Displays a list of all staff IDs",
        "operationId": "GetStaff",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/txt": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Gets general user information",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "404": {
            "description": "Failed to get user",
            "content": {
              "application/txt": {
                "example": "User 123456789 not found!"
              }
            }
          }
        }
      }
    },
    "/user/{id}/avatar": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Gets user's avatar",
        "operationId": "GetUserAvatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/apiKey": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Gets the permanent API key",
        "operationId": "GetAPIKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "websiteKey": []
          }
        ]
      }
    },
    "/user/create": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Creates a new user",
        "operationId": "CreateUser",
        "requestBody": {
          "description": "User's ids",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_create_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          },
          "409": {
            "description": "User already exists"
          }
        },
        "security": [
          {
            "websiteKey": []
          }
        ]
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Authenticates the user",
        "operationId": "UserLogin",
        "requestBody": {
          "description": "Steam ID",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_login_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "sessionKey": []
          }
        ]
      }
    },
    "/leaderboard/{hash}": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "description": "Gets scores from a specific score on the leaderboard",
        "operationId": "GetScores",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "Hash of the map",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "char",
            "in": "query",
            "description": "Map characteristic",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diff",
            "in": "query",
            "description": "Map difficulty",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting type, must be `top` or `around`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of scores to return. Max scores is `50`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of scores to get",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "User ID, gets used for the `around` sort type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "404": {
            "description": "Leaderboard not found"
          }
        }
      }
    },
    "/leaderboard/{hash}/upload": {
      "post": {
        "tags": [
          "Leaderboard"
        ],
        "description": "Uploads score to a leaderboard",
        "operationId": "UploadScore",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "Hash of the map",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User's ids",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hash_upload_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Score uploaded"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Not a highscore"
          }
        },
        "security": [
          {
            "sessionKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "inline_response_200_3_scores": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "modifiedScore": {
            "type": "integer"
          },
          "multipliedScore": {
            "type": "integer"
          },
          "accuracy": {
            "type": "number"
          },
          "misses": {
            "type": "integer"
          },
          "badCuts": {
            "type": "integer"
          },
          "fullCombo": {
            "type": "boolean"
          },
          "modifiers": {
            "type": "string"
          },
          "timeSet": {
            "type": "number"
          }
        },
        "description": "Scores object"
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The user's permanent API key"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "discord_id": {
            "type": "string",
            "description": "User's Discord ID"
          },
          "game_id": {
            "type": "string",
            "description": "User's Steam ID"
          },
          "username": {
            "type": "string",
            "description": "User's username"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar URL"
          }
        },
        "example": {
          "discord_id": "123456789",
          "game_id": "123456789",
          "username": "Username",
          "avatar": "https://api.thebedroom.party/user/123456789/avatar"
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "sessionKey": {
            "type": "string",
            "description": "Key used to submit scores"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "scoreCount": {
            "type": "integer",
            "description": "Amount of scores for the difficulty"
          },
          "scores": {
            "$ref": "#/components/schemas/inline_response_200_3_scores"
          }
        }
      },
      "user_create_body": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "discordID": {
            "type": "string"
          },
          "gameID": {
            "type": "string"
          }
        }
      },
      "user_login_body": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "hash_upload_body": {
        "type": "object",
        "properties": {
          "difficulty": {
            "type": "integer"
          },
          "characteristic": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "multipliedScore": {
            "type": "integer"
          },
          "modifiedScore": {
            "type": "integer"
          },
          "accuracy": {
            "type": "number"
          },
          "misses": {
            "type": "integer"
          },
          "badCuts": {
            "type": "integer"
          },
          "fullCombo": {
            "type": "boolean"
          },
          "modifiers": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "websiteKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "sessionKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}